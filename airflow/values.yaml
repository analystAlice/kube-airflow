airflow:
  # common settings and setting for the webserver
  # For prefix, use only lower case alphanumeric characters, '-' or '.', and must start and end
  # with an alphanumeric character
  prefix: " "
  fernet_key: ""
  service:
    type: ClusterIP
  baseUrl: "/airflow"
  dag_path: /dags
  init_retry_loop:
  image: mumoshu/kube-airflow:1.8.0.0-1.6.1
  # image_pull_policy: Always or IfNotPresent
  image_pull_policy: Always
  # Set scheduler_num_runs to -1 to loop indefinitively
  scheduler_num_runs: "-1"

celery:
  num_workers: 1

ingress:
  enabled: false
  annotations:
  host: ""
  path:
    web: /airflow
    flower: /flower

db:
  rabbitmq:
    # use_embedded == true means final hostname will be prefix + basename
    use_embedded: true
    user: airflow
    password: airflow
    basename: rabbitmq
    database: airflow
  postgres:
    # use_embedded == true means final hostname will be prefix + basename
    use_embedded: true
    user: airflow
    password: airflow
    basename: postgres
    database: airflow

persistence:
  enabled: false
  ## When enabled, define `storageClass` to set `volume.beta.kubernetes.io/storage-class`
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  storageClass: default
  accessMode: ReadWriteOnce
  size: 1Gi


flower:
  url_prefix: /flower

dags:
  # Use of git-sync: beware when using git-sync and airflow. If the scheduler reloads a dag in the
  # middle of a dagrun then the dagrun will actually start using the new version of the dag in the
  # middle of execution.
  # This is a known issue with airflow and it means it's unsafe in general to use a git-sync
  # like solution with airflow without:
  # - using explicit locking, ie never pull down a new dag if a dagrun is in progress
  # - make dags immutable, never modify your dag always make a new one
  git_sync_enabled: false
  git_repo:
  git_branch: master
  poll_interval_sec: 60
  git_sync_debug: false
  # Disable Load examples as soon as you enable git_repo
  load_examples: true
